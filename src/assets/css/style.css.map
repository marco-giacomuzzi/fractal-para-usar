{"version":3,"file":"style.css","sources":["style.scss","mixins/_rem.scss","../../components/atoms/01-button/button.scss"],"sourcesContent":["\n// Mixins\n// ------------------------------------------------------\n@import \"mixins/_rem.scss\";\n\n\n// Components\n// ------------------------------------------------------\n@import \"/Users/Marco/Boream-Trabajos/fractal-clean/src/components/atoms/01-button/button.scss\";\n\n\n\n","$rem-baseline: 16px !default;\n$rem-fallback: false !default;\n$rem-px-only: false !default;\n\n@function rem-separator($list, $separator: false) {\n  @if $separator == \"comma\" or $separator == \"space\" {\n    @return append($list, null, $separator);\n  } \n  \n  @if function-exists(\"list-separator\") == true {\n    @return list-separator($list);\n  }\n\n  // list-separator polyfill by Hugo Giraudel (https://sass-compatibility.github.io/#list_separator_function)\n  $test-list: ();\n  @each $item in $list {\n    $test-list: append($test-list, $item, space);\n  }\n\n  @return if($test-list == $list, space, comma);\n}\n\n@mixin rem-baseline($zoom: 100%) {\n  font-size: $zoom / 16px * $rem-baseline;\n}\n\n@function rem-convert($to, $values...) {\n  $result: ();\n  $separator: rem-separator($values);\n  \n  @each $value in $values {\n    @if type-of($value) == \"number\" and unit($value) == \"rem\" and $to == \"px\" {\n      $result: append($result, $value / 1rem * $rem-baseline, $separator);\n    } @else if type-of($value) == \"number\" and unit($value) == \"px\" and $to == \"rem\" {\n      $result: append($result, $value / $rem-baseline * 1rem, $separator);\n    } @else if type-of($value) == \"list\" {\n      $value-separator: rem-separator($value);\n      $value: rem-convert($to, $value...);\n      $value: rem-separator($value, $value-separator);\n      $result: append($result, $value, $separator);\n    } @else {\n      $result: append($result, $value, $separator);\n    }\n  }\n\n  @return if(length($result) == 1, nth($result, 1), $result);\n}\n\n@function rem($values...) {\n  @if $rem-px-only {\n    @return rem-convert(px, $values...);\n  } @else {\n    @return rem-convert(rem, $values...);\n  }\n}\n\n@mixin rem($properties, $values...) {\n  @if type-of($properties) == \"map\" {\n    @each $property in map-keys($properties) {\n      @include rem($property, map-get($properties, $property));\n    }\n  } @else {\n    @each $property in $properties {\n      @if $rem-fallback or $rem-px-only {\n        #{$property}: rem-convert(px, $values...);\n      }\n      @if not $rem-px-only {\n        #{$property}: rem-convert(rem, $values...);\n      }\n    }\n  }\n}\n","// ----------------------------------------------------------------------\n// BUTTONS\n// ----------------------------------------------------------------------\n\n%button {\n  display: inline-block;\n  border: 0;\n  border-radius: 4px;\n  padding: rem(10px 20px);\n  background-image: none;\n  color: #fff;\n  font-family: Helvetica, Arial, sans-serif;\n  font-size: rem(16px);\n  font-weight: 600;\n  text-align: center;\n  vertical-align: middle;\n  box-shadow: none;\n  user-select: none;\n  cursor: pointer;\n  transition: all .15s;\n\n  &:hover {\n    text-decoration: none;\n  }\n\n  &:focus {\n    outline: 0;\n  }\n\n  &:active,\n  &[aria-expanded=\"true\"] {\n    background-image: none;\n  }\n}\n\n\n.btn {\n  @extend %button;\n  background-color: dodgerblue;\n\n  // Success\n  // ----------------------------------------------------------------------\n  &--success {\n    background-color: lightSeaGreen;\n  }\n\n\n  // Danger\n  // ----------------------------------------------------------------------\n  &--danger {\n    background-color: crimson;\n  }\n\n\n  // Link\n  // ----------------------------------------------------------------------\n  &--link {\n    border-radius: 0;\n    background-color: transparent;\n    color: dodgerblue;\n    font-weight: 400;\n    box-shadow: none;\n    &:hover {\n      color: darken(dodgerblue, 15%);\n    }\n  }\n}\n\n\n// Specificity overrides\n// ----------------------------------------------------------------------\ninput[type=\"submit\"],\ninput[type=\"reset\"],\ninput[type=\"button\"] {\n  &.btn--block {\n    width: 100%;\n    min-width: 0;\n  }\n}\n"],"names":[],"mappings":"AEoCA,AAhCA,IAgCI,CAhCI;EACN,OAAO,EAAE,YAAY;EACrB,MAAM,EAAE,CAAC;EACT,aAAa,EAAE,GAAG;EAClB,OAAO,ED0BsB,QAA6B,CAA7B,OAA6B;ECzB1D,gBAAgB,EAAE,IAAI;EACtB,KAAK,EAAE,IAAI;EACX,WAAW,EAAE,4BAA4B;EACzC,SAAS,EDsBoB,IAA6B;ECrB1D,WAAW,EAAE,GAAG;EAChB,UAAU,EAAE,MAAM;EAClB,cAAc,EAAE,MAAM;EACtB,UAAU,EAAE,IAAI;EAChB,WAAW,EAAE,IAAI;EACjB,MAAM,EAAE,OAAO;EACf,UAAU,EAAE,QAAQ,GAcrB;EAGD,AAfE,IAeE,AAfD,MAAM,CAAC;IACN,eAAe,EAAE,IAAI,GACtB;EAaH,AAXE,IAWE,AAXD,MAAM,CAAC;IACN,OAAO,EAAE,CAAC,GACX;EASH,AAPE,IAOE,AAPD,OAAO,EAOV,IAAI,CAND,AAAA,aAAC,CAAc,MAAM,AAApB,EAAsB;IACtB,gBAAgB,EAAE,IAAI,GACvB;;AAIH,AAAA,IAAI,CAAC;EAEH,gBAAgB,EAAE,UAAU,GA4B7B;EAxBE,AAAD,aAAU,CAAC;IACT,gBAAgB,EAAE,aAAa,GAChC;EAKA,AAAD,YAAS,CAAC;IACR,gBAAgB,EAAE,OAAO,GAC1B;EAKA,AAAD,UAAO,CAAC;IACN,aAAa,EAAE,CAAC;IAChB,gBAAgB,EAAE,WAAW;IAC7B,KAAK,EAAE,UAAU;IACjB,WAAW,EAAE,GAAG;IAChB,UAAU,EAAE,IAAI,GAIjB;IATA,AAMC,UANK,AAMJ,MAAM,CAAC;MACN,KAAK,EAAE,OAAuB,GAC/B;;AAOL,AAGE,KAHG,CAAA,AAAA,IAAC,CAAK,QAAQ,AAAb,CAGH,WAAW;AAFd,KAAK,CAAA,AAAA,IAAC,CAAK,OAAO,AAAZ,CAEH,WAAW;AADd,KAAK,CAAA,AAAA,IAAC,CAAK,QAAQ,AAAb,CACH,WAAW,CAAC;EACX,KAAK,EAAE,IAAI;EACX,SAAS,EAAE,CAAC,GACb"}